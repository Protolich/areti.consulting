/*
# Settings (_settings)
*/
/*
## Variables

### General

$phi: 1.618033988749 - Golden ratio
*/
/*
### Colours

<span style="color: #333">$colour-base - #333</span> <span style="background: #333; color: #FFF;">&nbsp;$colour-base - #333&nbsp;</span>

<span style="color: #339">$colour-highlight - #339</span> <span style="background: #339; color: #FFF;">&nbsp;$colour-highlight - #339&nbsp;</span>

<span style="color: #339">$colour-link - #339</span> <span style="background: #339; color: #FFF;">&nbsp;$colour-link - #339&nbsp;</span>
*/
/*
### Fonts

$font-size - 13

$line-height - 1.4

<span style="font-family: sans-serif;">$font-base - sans-serif</span>

<span style="font-family: sans-serif;">$font-header - sans-serif</span>
*/
/*
### Layout

$width - 960

$columns - 24

$gutter - 12
*/
/*
## Functions

### em($size: $font-size, $context: $fs)

Will convert a pixel based size to an em value.
First value is the target size, the second value is the font-size of the context it is in.

Examples:
`em(26)` // 2em if base font-size is 13px
`em(18, 12)` // 1.5em
*/
/*
### lh($size: $font-size, $context: $fs)

Will provide the same function as 'em' above buth without appending 'em' to the result.
This makes it more suitable to use as a line-height value.

Examples:
`lh(26)` // 2 if base font-size is 13px
`lh(18, 12)` // 1.5
*/
/*
### fluid($columns: 1, $total-columns: $columns)

Will provide the % result of the first value divided by the second.
Suitable for working out columns and general % values.

Examples:
`fluid(2, 6)` // 12.5%
`fluid(10px, 960px)` // 1.041666666666667%
*/
/*
## Mixins

Mixins must to be called using @include (scss) or + (sass)

### vendor($property, $value)

Add vendor prefixes to a property and provide the value for the property

`@include vendor(box-shadow, 0 0 10px 0 #000);`

Outputs:
`-webkit-box-shadow: 0 0 10px 0 #000`
`-moz-box-shadow: 0 0 10px 0 #000`
`-ms-box-shadow: 0 0 10px 0 #000`
`-o-box-shadow: 0 0 10px 0 #000`
`box-shadow: 0 0 10px 0 #000`
*/
/*
### list-reset

Resets current list only

<pre>
ul {
	@include list-reset;
}
</pre>

Outputs:
<pre>
ul {
	margin: 0;
	padding: 0;
}
ul > li {
	list-style: none;
	list-style-image: none;
}
</pre>
*/
/*
### list-reset-full

Reset current and all child lists

<pre>
ul {
	@include list-reset-full;
}
</pre>

Outputs:
<pre>
ul, ul ul, ul ol {
	margin: 0;
	padding: 0;
}
ul li {
	list-style: none;
	list-style-image: none;
}

</pre>
*/
/*
### clearfix

Clear an elements floated children

<pre>
div {
	@include clearfix;
}
</pre>

Outputs:
<pre>
div {
	*zoom: 1;
}
div:before, div:after {
	content: "";
	display: table;
}
div:after {
	clear: both;
}
</pre>
*/
/*
### keyframes($name)

Set animation keyframes over multiple browser extensions

<pre>
.box {
	@include keyframes(my-animation) {
		0% { opacity: 0; }
		100% { opacity: 1; }
	}
}
</pre>

Outputs:
<pre>
.box {
	@-webkit-keyframes my-animation {
	  0%   { opacity: 0; }
	  100% { opacity: 1; }
	}
	@-moz-keyframes my-animation {
	  0%   { opacity: 0; }
	  100% { opacity: 1; }
	}
	@-ms-keyframes my-animation {
	  0%   { opacity: 0; }
	  100% { opacity: 1; }
	}
	@-o-keyframes my-animation {
	  0%   { opacity: 0; }
	  100% { opacity: 1; }
	}
	@keyframes my-animation {
	  0%   { opacity: 0; }
	  100% { opacity: 1; }
	}
}
</pre>
*/
/*
### hidden-full

Completely hide an element

<pre>
div {
	@include hidden-full;
}
</pre>

Outputs:
<pre>
div {
	display: none !important;
	visibility: hidden;
}
</pre>
*/
/*
### max($maxwidth: $width)

A simple max-width media query

<pre>
div {
	@include max(768px) {
		display: none;
	}
}
</pre>

Outputs:
<pre>
@media (max-width: 768px) {
	div {
		display: none;
	}
}
</pre>
*/
/*
### min($minwidth: $width)

A simple min-width media query

<pre>
div {
	@include min(768px) {
		display: block;
	}
}
</pre>

Outputs:
<pre>
@media (min-width: 768px) {
	div {
		display: block;
	}
}
</pre>
*/
/*
### pixel-ratio($pixelratio: 2, $basedpi: 96)

A simple pixel-ratio media query

$basedpi is used for fine control over the dpi query value

<pre>
div {
	@include pixel-ratio {
		background-image: url(image@2x.png);
	}
}
</pre>

Outputs:
<pre>
@media
	(-webkit-min-device-pixel-ratio: 2),
	(   min--moz-device-pixel-ratio: 2),
	(     -o-min-device-pixel-ratio: 2/1),
	(        min-device-pixel-ratio: 2),
	(                min-resolution: 192dpi),
	(                min-resolution: 2dppx) {
		div {
			background-image: url(image@2x.png);
		}
	}
</pre>
*/
/*
### generate($width: 10px, $height: 10px, $position: static)

Create generic styling for :before/:after

$height / $width / $position all control their namesake CSS properties

<pre>
div:after {
	@include generate;
}
</pre>

Outputs:
<pre>
div:after {
	content: "";
	overflow: hidden;
	text-indent: -9999em;
	display: block;
	width: 10px;
	height: 10px;
	position: static;
}
</pre>
*/
/*
### opacity($o: 0.5)

Handle standard & IE opacity

<pre>
div {
	@include opacity(.75);
}
</pre>

Outputs:
<pre>
div {
	opacity: .75;
	filter: alpha(opacity=75);
}
</pre>
*/
/*
### border-radius($val: 10px)

Friendly interface to vendor(border-radius)
*/
/*
### box-shadow($val: 0 0 10px #000)

Friendly interface to vendor(box-shadow)
Allows multiple comma separated values.
*/
/*
### gradient($direction:vertical, $start-color: #fff, $start-position: 0%, $end-color: #000, $end-position: 100%)

Create horizontal / vertical gradients

Note : Does not include IE9 data uri support

<pre>
div {
	@include gradient($start-color: #F00, $end-color: #0F0);
}
</pre>

Outputs:
<pre>
div {
	background-image: -moz-linear-gradient(top, #F00 0%, #0F0 100%);
	background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #F00), color-stop(100%, #0F0));
	background-image: -webkit-linear-gradient(top, #F00 0%, #0F0 100%);
	background-image: -o-linear-gradient(top, #F00 0%, #0F0 100%);
	background-image: -ms-linear-gradient(top, #F00 0%, #0F0 100%);
	background-image: linear-gradient(to bottom, #F00 0%, #0F0 100%);
	background-repeat: repeat-y;
}
</pre>
*/
/*
### transform($arguments)

Friendly interface to vendor(transform) w/backface-visibility: hidden
*/
/*
### transition($arguments)

Friendly interface to vendor(transition)
*/
/*
### perspective($val: 0)

Friendly interface to vendor(perspective)
*/
/*
### perspective-origin($val: 50% 50%)

Friendly interface to vendor(perspective-origin)
*/
/*
### transform-origin($val: 50% 50%)

Friendly interface to vendor(transform-origin)
*/
/*
### transform-style($val: preserve-3d)

Friendly interface to vendor(transform-style)
*/
/*
### Placeholders
*/
/*
### boxes($cols: 3, $gutter: 10px, $selector: ".col")

Set the container and its children (as  selected by the selector argument) to be a set of columns.
*/
/*
## Extend

Use these placeholder styles with @extend.

### %debug

Used to highlight items via background-color.
Can be useful for debugging.
*/
/*
### %ellipsis

If the element has overflowing text the text will be truncated and an ellipsis appended to the end.
*/
/*
### %ir

Use when setting an element such as an input button to use a background-image.

Not recommended to use this method unless necessary.
Try and use appropriate elements where possible (`<input type="image" />` for example).
*/
/*
### %clearfix

@extend interface for @include clearfix;
*/
/*
### %list-reset

@extend interface for @include list-reset;
*/
/*
### %list-reset-full

@extend interface for @include list-reset-full;
*/
/*
# Normalize (_normalize)

normalize.css v1.0.1 | MIT License | git.io/normalize

Global reset. This file should not be edited.

*/
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }

*, *:after, *:before {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  -ms-box-sizing: inherit;
  -o-box-sizing: inherit;
  box-sizing: inherit;
  background-repeat: no-repeat; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block; }

audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden] {
  display: none; }

html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

html,
button,
input,
select,
textarea {
  font-family: sans-serif; }

body {
  margin: 0; }

a:focus {
  outline: thin dotted; }

a:active,
a:hover {
  outline: 0; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

h2 {
  font-size: 1.5em;
  margin: 0.83em 0; }

h3 {
  font-size: 1.17em;
  margin: 1em 0; }

h4 {
  font-size: 1em;
  margin: 1.33em 0; }

h5 {
  font-size: 0.83em;
  margin: 1.67em 0; }

h6 {
  font-size: 0.75em;
  margin: 2.33em 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

blockquote {
  margin: 1em 40px; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

p,
pre {
  margin: 1em 0; }

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  _font-family: 'courier new', monospace;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: none; }

q:before,
q:after {
  content: '';
  content: none; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

dl,
menu,
ol,
ul {
  margin: 1em 0; }

dd {
  margin: 0 0 0 40px; }

menu,
ol,
ul {
  padding: 0 0 0 40px; }

nav ul, nav ol {
  list-style: none;
  list-style-image: none;
  margin: 0;
  padding: 0; }
nav a {
  text-decoration: none; }

img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */ }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

form {
  margin: 0; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */ }

button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */ }

button,
input {
  line-height: normal; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */ }

button[disabled],
input[disabled] {
  cursor: default; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */ }

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */ }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
  resize: vertical; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td {
  vertical-align: top; }

/*
# Base styles: opinionated defaults (_base)
*/
html,
button,
input,
select,
textarea {
  color: #333333; }

body.site {
  font-family: "Open Sans", sans-serif;
  font-size: 0.8125em;
  line-height: 1.4;
  word-wrap: break-word; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

img {
  vertical-align: middle; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/*
 * Text Reset
 */
h1, h2, h3, h4, h5, h6 {
  margin: 0 0 .5em; }

p {
  margin: 0 0 1em; }

/*
 * Links
 */
a {
  color: #333399; }

/* Text Alignment */
.justifyleft {
  text-align: left; }

.justifyright {
  text-align: right; }

.justifyfull {
  text-align: justify; }

.justifycentre {
  text-align: center; }

/* ==========================================================================
   Chrome Frame prompt
   ========================================================================== */
.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Image replacement
 */
.ir {
  background-color: transparent;
  border: 0;
  overflow: hidden;
  /* IE 6/7 fallback */
  *text-indent: -9999px; }
  .ir:before {
    content: "";
    display: block;
    width: 0;
    height: 100%; }

/*
 * Hide from both screenreaders and browsers: h5bp.com/u
 */
.hidden {
  display: none !important;
  visibility: hidden; }

.hide {
  display: none; }

/*
 * Hide only visually, but have it available for screenreaders: h5bp.com/v
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screenreaders, but maintain layout
 */
.invisible {
  visibility: hidden; }

@-webkit-keyframes fadein {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

@-moz-keyframes fadein {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

@-ms-keyframes fadein {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

@-o-keyframes fadein {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

@keyframes fadein {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

img {
  display: inline-block;
  height: auto;
  max-width: 100%; }
  .oldie img {
    max-width: none; }
  img.right {
    float: right;
    margin: 0 0 16px 16px; }
  img.left {
    float: left;
    margin: 0 16px 16px 0; }
  img[style*="left"] {
    margin: 0 16px 16px 0; }
  img[style*="right"] {
    margin: 0 0 16px 16px; }

.wrap {
  max-width: 1000px;
  margin-left: 5%;
  margin-right: 5%; }
  @media (min-width: 1100px) {
    .wrap {
      margin-left: auto;
      margin-right: auto; } }

.panel {
  background-color: #333;
  height: 100vh;
  width: 100vw;
  max-width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column; }

.logo-face {
  color: #FFF;
  font-family: "Cinzel Decorative", serif;
  font-size: 6.15385em;
  line-height: 1.2;
  text-align: center; }
  .logo-face span {
    animation-name: fadein;
    animation-duration: 1s;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;
    opacity: 0; }
    .logo-face span:nth-child(1) {
      animation-delay: 0s; }
    .logo-face span:nth-child(2) {
      animation-delay: 0.5s; }
    .logo-face span:nth-child(3) {
      animation-delay: 1s; }
    .logo-face span:nth-child(4) {
      animation-delay: 1.5s; }
    .logo-face span:nth-child(5) {
      animation-delay: 2s; }
    .logo-face span:nth-child(6) {
      animation-delay: 2.5s;
      font-size: 0.475em;
      display: block; }

header {
  background-color: #333;
  padding: 16px; }
  header + * {
    margin-top: 20px; }

footer {
  border-top: 1px solid #333;
  font-size: 0.76923em;
  padding: 2em;
  margin-top: 20px;
  text-align: center; }

.content * {
  margin: 0; }
  .content * + * {
    margin-top: 20px; }

nav .active a {
  text-decoration: underline; }

.nav-head {
  text-align: right;
  width: 100%; }
  @media (min-width: 768px) {
    .nav-head {
      flex-direction: row; } }
  .nav-head ul {
    line-height: 53px; }
    .nav-head ul ul {
      left: -9999px;
      position: absolute; }
  .nav-head li {
    display: inline-block;
    line-height: 1; }
    .nav-head li:hover > ul {
      left: auto; }
  .nav-head a {
    color: #FFF;
    display: block;
    font-size: 0.92308em;
    padding: 10px;
    width: 100%; }
    @media (min-width: 768px) {
      .nav-head a {
        padding-top: 0;
        padding-bottom: 0;
        width: auto; } }
    .nav-head a + a {
      border-top: 1px solid #FFF; }
      @media (min-width: 768px) {
        .nav-head a + a {
          border-top: none; } }
  .nav-head .root {
    font-family: "Cinzel Decorative", serif;
    font-size: 2.46154em;
    float: left; }

.nav-home {
  border-top: 1px solid #FFF;
  margin-top: 20px;
  padding: 20px 10px 0;
  text-align: center; }
  .nav-home li {
    display: inline-block; }
  .nav-home a {
    color: #FFF;
    font-size: 1.23077em;
    padding-left: 20px;
    padding-right: 20px; }
